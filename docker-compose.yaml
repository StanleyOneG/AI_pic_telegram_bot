version: '3.8'
services:
  bot_postgres:
    image: postgres:15.0-alpine
    volumes:
      - bot_postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 3s
      timeout: 20s
      retries: 5
      start_period: 80s
    ports:
      - 5432:5432
    container_name: bot_postgres

  telegram_bot:
    build:
      context: ./src
      dockerfile: Dockerfile
    env_file:
      - ./.env
    depends_on:
      bot_postgres:
        condition: service_healthy
    expose:
      - 8000
    container_name: telegram_bot

  bot_redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - bot_redis_data:/data

    command: >
      --save 60 1

  nginx:
    image: nginx:1.23.3
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - telegram_bot
    ports:
      - 80:80
    container_name: nginx_auth

  jaeger:
    image: jaegertracing/all-in-one:latest
    restart: unless-stopped
    ports:
      - 6831:6831/udp
      - 16686:16686
    container_name: jaeger


  pgadmin4:
    image: dpage/pgadmin4:latest
    ports:
      - 7777:80
    env_file:
      - ./.env
    hostname: pgadmin4
    restart: unless-stopped
    container_name: pgadmin_bot

volumes:
  bot_postgres_data:
  bot_redis_data:
